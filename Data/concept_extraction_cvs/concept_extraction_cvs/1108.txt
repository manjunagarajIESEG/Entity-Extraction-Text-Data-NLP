Senior Python Developer
John Deere ISG - Urbandale, IA
onsite GSix Software Development (Smart Display on John Deere Tractors):John Deere GSix/GreenStar Display is a display for Agricultural Management Solutions. The GreenStar system provides planning and reporting tools to record data about field conditions, tillage practices, spraying applications, fertilizer rates, seed varieties and populations, weather conditions and more. It comes with different apps like Guidance and Machine Control. The benefits of guidance and machine control are immediate, clear and proven with Lower fuel costs, reduced fertilizer and chemical usage, more sustainable farming and higher productivity and profitability. I am working in Reprogramming team in John Deere Intelligent Solutions Group to upgrade the display from WR4 to WR5 using transition software and incremental updates. Our responsibilities also include to manage the software packages which comes in forms of rpms by installing/updating/upgrading from Application Manager from GUI display. Responsibilities: • Developed Transition software using python, shell scripts and YUM/RPM to upgrade GSix Display WR5 to WR4 • Automated most of the manual and reporting work using Python and Shell. • Development of an intra-site using Django (Python web framework) for the application to reduce data/report clutter to have a single version of data. • Implemented logics to install/update/upgrade software packages in Reprogramming Application Manager using C++ • Created application screens using QT Widgets, custom JD Widgetsdeveloped at John Deere • Production support, bug/defect fixing, integration, field visit to solve customer issues • Performed Test Driven Development (TDD) in an Agile developmentenvironment • Implemented several functionalities in Reprogramming application • Implemented unit tests using Python Mock, C++ in Google test framework • Written Squish tests using python to automate the GUI testing • Used Maximo in Incident, Problem and Change Management • Shell script to clear and monitor log files and pull job run status reports out of syslog. • Automated most of the manual and reporting work using Python and Shell. • Performed code reviews and Integration Testing with Several Teams • Used Tortoise SVN extendedly to manage different repo branches, integrating many branches in one verifying successful build. Environment: Python, C,C++/QT, STL/Boost Library, putty, Ubuntu 14.04, Unix Shell Scripting, Python Mock, Google Test/Mock, GDB server, SVN Tortoise, YUM/RPM/APTITUDE, GUI Squish Test using Python, Jenkins, Agile methodology, Windows
