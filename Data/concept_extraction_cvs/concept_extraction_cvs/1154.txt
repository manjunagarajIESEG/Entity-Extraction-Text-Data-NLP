Python Developer
T - Mobile - Bellevue, WA
Responsibilities: • Analyzed system requirements specifications and also in client interaction during requirements specifications. • Participated in the complete SDLC process. • Developed user interface using CSS, HTML, JavaScript and JQuery. • Wrote Python modules to extract/load asset data from the MySQL source database. • Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress. • Developed views and templates with Python and Django's view controller and templating language to create a user-friendly website interface. • Used Django framework for application development. • Created entire application using Python, Django, MySQL and Linux. • Enhanced existing automated solutions, such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs. • Created database using MySQL, wrote several queries to extract/store data. • Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization. • Played a key role in a development wide transition from Subversion to Git, which resulted in an increase in efficiency for the development community. • Developed a fully automated continuous integration system using Git, Gerrit, Jenkins, MySQL and custom tools developed in Python and Bash. • Managed, developed, and designed a dashboard control panel for customers and Administrators using Django, OracleDB, PostgreSQL, and VMWare API calls. • Experience in writing Sub Queries, Stored Procedures, Triggers, Cursors, and Functions on MySQL and PostgreSQL database. • Developed, tested and debugged software tools utilized by clients and internal customers. • Coded test programs and evaluated existing engineering processes. • Work with team of developers on Python applications for RISK management. • Worked on rebranding the existing web pages to clients according to the type of deployment. • Special skills in developing user friendly, simple yet effective web based applications. • Deployed the project into Heroku using GIT version control system. • Used advanced packages like Mock, patch and beautifulsoup (b4) to perform unit testing. • Used many regular expression in order to match the pattern with the existing one. • Skilled in using collections in Python for manipulating and looping through different user defined objects. • Involved in Unit testing and Integration testing. Environment: Python 2.7, Django 1.4, Puppet Rspec, Jenkins, Grafana/Graphite, MySQL, Linux, HTML, CSS, JQuery, JavaScript, Apache, Linux, Git.
