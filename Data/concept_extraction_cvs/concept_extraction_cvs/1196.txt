Software Developer
Baker Hughes - Houston, TX
ELP (Electronic Life Prediction): ELP is life estimation software developed by and for Baker Hughes for their drilling tools. This software predicts the life and reliability of drilling tools used by the company. Life prediction provides a cutting-edge way to identify precursors to costly failures in the field and offer proactive guidance during maintenance periods for parts may otherwise have been disregarded based strictly on procedure. Statistical models that relate operating environment to life of the component and are derived from failure data of fielded components, introduce a new way to optimize the efficiency of drilling tools. This is a groundbreaking methodology developed to determine life of components operating in drilling environment by incorporating statistical aspects such as those caused because of variation in operating stress and maintenance upgrades. Since the algorithm utilizes field data, the need for costly laboratory experiments are also eliminated. Each model developed is unique to the specified part and can be calibrated for best fit. Bayesian based model selection technique is used in this software and it incorporates operating environment variables after each successful drilling run to select model that gives the best survival probability for that component. This advanced capability has been developed to update life prediction by dynamically selecting models after each successful drilling run. This ensures maximum utilization of a component, while avoiding failure to improve to overall reliability of the tool while in the field. Presently I am working on developing a tool in Java for the above software along with automation of testing using Python. Responsibilities: • Leading the Automation activity. • Understanding the existing VBA programs. • Implementing a high level design for the overall program. • Implement the entire logic in Java. • Used Eclipse to work on the java code. • White box / unit testing of the Java code with the baseline results from VBA. • Integration of various modules implemented in java and it's testing. • Provide multiple options to accept inputs like XML, database connection, excel file. • Pushed for more streamlined process that reduced much of the manual work involved. • Automated most of the manual and reporting work using Python. • Interaction/meetings with clients and onsite. Environment: Java, Python, VBA, XML, SQL Server, SQL, Eclipse, Windows
