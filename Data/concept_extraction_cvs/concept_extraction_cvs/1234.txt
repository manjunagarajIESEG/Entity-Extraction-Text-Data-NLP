JAVA/J2EE/Drools Developer
Mayo Clinic - Rochester, MN
Description: Ease is a clinical rules knowledge based system. The goal of the system is to greatly improve patient care following surgery by encapsulating Mayo Clinic surgical best practices. Ease is implemented with declarative rule written in Drools language. Rule output enriches clinical data, alerts physicians to possible post-surgery complications and monitors patient progress against predefined Enhanced Recovery Pathways.  Responsibilities: • Worked with Business Analysts and Subject Matter Experts on the formalization and documentation of Mayo Clinic Enterprise wide Clinical Expert System rules. • Extensively worked on Drools Rules Engine and Expectation Enginefor writing Business rules Validation. • Agenda Filter is used to distinguish between the same rules applied to different categories. • Integrated the Drools and JBPM to application framework which involved dynamic creation of knowledgebase and Knowledge session. • Used Spring MVC and the presentation layer of the application using JSP pages. • Used Spring Framework using IOC, AOP, Core, and Transaction Management. • Responsible for designing UI Applications using JavaScript, CSS, HTML, JSON, jQueryand AJAX. • Developed single page web application using JavaScript framework Angular JS. • Defined a message store architecture necessary to support drools rule engine input processing, scalability and recovery. • Wrote various types of Business rules in the .drl (drools file) and .ece (expectation files) using Drools rule engine for business decision making. • Implemented the server side RestfulWebServices functionality to support promotion and validation functionality the application to allow external applications to access the data. • Involved in writing application level code to interact with APIs, Web Services using AJAX, JSON and XML. • Responsible for the creation and execution of the JUnit Test cases for each coding assignment. • Used Hibernate to develop DAO layer for performing CRUD operations on the database and configured it with Spring's Hibernate DAO Support. • Deployed the application on Tomcat Application servers using Jenkins continuous integration build. • Used log4j to capture the log that includes runtime exceptions and debug information.  Environment: Java 1.7, J2EE, Spring, Hibernate, Drools 6.3, Rabbit MQ, Java Script, HTML, CSS, JQuery, AJAX, JSON, MAVEN, Intellij, Tomcat, Jenkins, MSSQL Server 2012 and MongoDB, GIT and TFS
