Java Developer
Private -Bank client
Wealth Management/Mobile Only  Project: This system allows investment advisors to give projections to customers wishing to invest their money in securities for Wealth Management and Retirement planning. . This application allows the customer/investment advisors to manage accounts, view balances, positions, transactions, realized/unrealized gains/losses, performance and drift reports. The project aims to provide best in class Wealth Management/online retirement service solutions to US Bank's customers. This project mainly focusses on 'Asset Allocation Model' which shows how participant money will move along different available investment options over a period of time. Bank Mobile Only Enrollment safely accesses your accounts wherever your mobile device connects. MOE deliver Mobile Banking encrypted and with the added security of SiteKey and optional SafePass - just like Online Banking.  • Developed REST based web services using spring web services module. • Consumed web services from other vendors to retrieve information using Spring Rest Client. • Designed and developed the application UI using spring web flow MVC frame work. • Developed and maintained multiple versions of web services by creating corresponding end points with Apache CXF • Responsible for creating web service using WSDL for request initiator which acts as a hub within USBANK which is the centralized collection and status point for all service requests. • Developed the controller servlet to handle the requests and responses. • Designed and developed JSP pages • Involved in writing client side validations using JavaScript. • Developed front-end content using HTML, CSS, AngularJS and client-side validations using JavaScript. • AJAX was used to perform simple XML Http Request callbacks for retrieving data dynamically into the client pages. • Used Web services (SOAP) for transmission of large blocks of XML data over HTTP. • Developed Data Access Objects to access middleware Web Services. • Created Spring Interceptors to validate web service requests and enables notifications. • Wrote Hibernate configuration file, Hibernate mapping files and defined persistence classes to persist the data into Oracle Database. • Developed Spring MVC controllers to handle the requests coming from UI. • Deployed the application to web sphere application server using WAS admin console. • Implemented caching using EHCACHE for the DAO and Service regions. • Developed DAO objects using Hibernate to interact with database. • Spring AOP declarative transaction management is used to support transactions. • Defined AOP point cuts and aspects in spring for the transaction management. • Used JQUERY to perform client side validation in JSP pages. • Tested the web services using SOAPUI and REST client tools. • SVN is used to check in the source code for the projects. • Used JSP's in the presentation tier along with various Springtags, JSTL tags, CSS and JavaScript. • Spring AOP is used for Security and Transaction Management. • Used SpringIOC (Inversion of Control)/DI (Dependency Injection) to wire the object dependencies across the application • Used various Design Patterns like MVC, Factory, DAO, Singleton while developing the application • Involved in integrating Spring with Hibernate and delegated the persistence operations using HibernateTemplate • Involved in writing complex HQL, to handle the persistence operations. • Followed Agile approach and was involved in writing JUNIT Test cases which were also used in Integration Testing.  Environment: Java/Java EE 1.6, Eclipse 3.5, JBOSS,  Spring MVC, Spring IOC, JSP, JavaScript, HTML, AJAX,  JSTL, Hibernate 3.X, XML, JUnit, Log4j, SQL Developer, Oracle 11g, SVN, SOAPUI, REST Client and Maven, Postman, Apache CXF
