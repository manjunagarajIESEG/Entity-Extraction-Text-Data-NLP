Python developer
Frost National Bank - San Antonio, TX
San Antonio, TX.        Oct 14  -  Till Date Project: Accounts Payable Auditing Tool ATCAT is an Accounts Payable Auditing Tool that detects and prevents duplicate payments and processing errors by comparing unpaid invoices to paid invoices. "Exceptions" are then created that can be validated and move through to the claims management module. ATCAT is web-based, built on Django/ Python, MongoDB and MySQL. Additionally, this tool provides consistent and auditable mechanism for the identification, verification and claim processing for overpayments.  Role: Python developer Responsibilities: • Analyzed the Business Requirement Documents and created the technical specification documents. • Implemented business logic in Python to prevent, detect and claim the duplicate payments. • Re-engineered various modules for implementing changes and created efficient system. • Created Map Reduce programs in Python to reconcile the payment history and account payable files. • Implemented code to create dynamic claim reports after auditing using PyJasper. • Developed dynamic web pages to view the reports generated using Django Framework. • Developed entire frontend and backend modules using Python on Django Web Framework. • Used Django configuration to manage URLs and application parameters. • Build all database mapping classes using Django models. • Wrote Python scripts to parse XML documents and load the data in database. • Worked with JSON based REST Web services and Amazon Web Services. • Used Jenkins to deploy your Django application and run unit tests. • Developed entire frontend and backend modules using Python on Django Web Framework. • Developed tools using Python, Shell scripting, XML to automate some of the menial tasks. • Created Business Logic using Python to create Planning and Tracking functions • Developed the required XML Schema documents and implemented the framework for parsing XML documents. • Implemented code to perform CRUD operations on MongoDB using PyMongo module. • Used JQuery and Ajax calls for transmitting Json data objects between frontend and controllers. • Used Github for version control. • Build development environment with JIRA. • Designed and configured database and back end applications and programs. • Created Views and developed Stored Procedures, Functions and Triggers. • Participated in Daily Stand-up meetings and provided status on work progress.  Environment: Python, Django, MySQL, HTML, JavaScript XML, JIRA, Jenkins, JSON, PyJasper, PyMongo, MongoDB, Tableau, AWS EC2 and Elastic Map Reduce
