Senior Java Application Developer
JP Morgan Chase
Project 1: Gauss Marginal Pricer Project Summary: Gauss Marginal Pricer is a pre-trading application that enables marketers and traders to simulate and analyze the pricing impact and credit charge for deals existing in Gauss and new deals modeled in the application. The impact can be calculated on trade level or portfolio level.  • Managed requirements and design phase towards identifying mutually agreed solutions with technical teams and business analysis. • Involving in analysis, designing, coding (Java Collections, IO, Concurrency, Multi-threading, Hibernate mapping), writing Server components for the most of the enhancements (Client details, Transaction, FVA Intermediate, Netting and Collateral, Market Data, Forward MTM, Basel II Exposure, Basel III Stress) based on the needs. • Implemented the Load test Framework to test the server load in weblogic Cluster for each release using Event Notification. • Implemented export to excel functionality Using POI framework to populate the Result Summary, FVA intermediate, Basel Netset • Implemented Bulk Run option in Import deals screen to do the Bulk runs for the give SPN for the users. • Implemented Lazy loading in client screen Bank LE drop down using Concurrent map with thread. • Working closely with business users (traders and marketers) to investigate and fix the production issues on while working on parallel development for the scheduled release. • Adhering coding standard using Check Style, Find Bug, and PMD prior to all these release and interacting with operators for deployments (UAT, DR and PROD) for all these release. • Developed various java objects (POJO) mapping with Oracle objects. Created and updated SQL queries based on requirements. • Involving in code review activities and guiding the junior developers in the all phase of development and having experienced on onsite/offshore model. • Development has been based on agile scrum methodologies- every 4 week sprint. • Responsible for manual testing in development and smoke test in Production phase • Implemented the plan for rollback option through application properties based coding to handle last minute project failover in production.  Environment: Java1.5 (Collections, Concurrency, Multi-threading), Spring3, WebLogic, Hibernate 3.3, XML, SOAP (JAX-WS), Oracle 11g, , JUnit, Tortoise SVN, UNIX, Log4j, Eclipse3.7.1, FileZilla 3.6, PuTTY, Oracle SQL Developer 3.2, Toad12.1, JIRA 11, Maven3.0 with RAPtoR, TeamCity 6, Jenkins Build, uDeploy 4.8, Apache Continuum, XML, HP Fortify Audit Workbench 3.80.
