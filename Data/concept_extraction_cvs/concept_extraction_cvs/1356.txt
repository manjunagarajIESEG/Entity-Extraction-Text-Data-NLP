Java Developer
State Street - Boston, MA
Project Description: RMS is a multi-phase enterprise-wide Risk Management System (RMS) with the objective of delivering a modern, scalable, centralized application platform to support the ERM (Enterprise Risk Management) division of State Street for assessing risk and evaluating capital  adequacy as per Regulatory guidelines. This initiative designs the compliance programs, consistent with the country-specific regulatory requirements that need to be developed at State Street. RMS establishes the technical platform for delivery of a diverse set of services at State Street, and provides the business the capability to adopt the most advanced and complex approaches for assessing risk and evaluating capital adequacy allowing delivery of multiple services to State Street clients using a shared point of entry and common management process. The scope includes providing maintenance (enhancement) and support activities for the following applications: • Probability of Default (PD) • Counterparty Management System (CMS) • Risk Data Repository (RDR) Risk Data Repository (RDR) is one of the key applications of BASEL II program that source, enriches, manipulate and provide data visibility to the wide range of users across different work streams like Credit Risk, Market Risk and Operational Risks. RDR can be divided into three major areas 1. Stage 1 2. Stage 2 3. Stage 3 a.k.a. RDR These three stages are briefly explained below: 1. Stage 1: This is the first level where loading of exposure records from different source systems happen. 2. Stage 2: Exposure records of different products are loaded into this staging environment. 3. Stage 3: Stage 3 data is fed from the Stage 2 data through ETL jobs and as well users manually add/upload exposures into the system. Enrichment of exposure records happen in this stage. There is a web application sits on top of the RDR data at this final stage of exposure data.  Responsibilities: • Worked on Agile Environment having daily stand up meetings, pre planning and planning meeting and also face-to-face communication. • Responsible for completion of the User stories assigned for each Sprint including Analysis, Development, Testing, Defect fix, Tech Spec update, without any deviations in schedule. • Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP, Servlets, Form Bean and Action classes. • Implemented server side tasks using Servlets and XML. • Helped to develop page templates using Struts Tiles framework. • Implemented Struts Validation Framework for Server side validation. • Developed JSP's with Custom Tag Libraries for control of the business processes in the middle-tier and was involved in their integration. • Implemented Struts Action classes using Struts controller component. • Integrated Spring DAO for data access using Hibernate, used HQL and SQL for querying databases. • Used the DAO Pattern and J2EE framework facilitated the integration and deployment of DAO, Servlets, JSP and XML. • Developed various J2EE components like Servlets, JSP, JSTL, AJAX, SAX, XSLT, JAXP, JNDI, JMS, and MQ Series by using RAD Application Framework. • Designed an alerts framework that enables user to see changes in their ratings. • Written stored procedures, triggers, and cursors using Oracle PL/SQL. • Created and deployed web pages using HTML, JSP, JavaScript and CSS. • Written JUnit Test cases for performing unit testing. • Used Rational Clear Case as Version control. • Implemented Java/J2EE Design patterns like Business Delegate and Data Transfer Object (DTO), Data Access Object. • Created and injected spring services, spring controllers and DAOs to achieve dependency injection and to wire objects of business classes. • Used Hibernate, object/relational-mapping (ORM) solution, technique of mapping data representation from MVC model to Oracle Relational data model with an SQL-based schema. • Developed lot of modules and integrated them with the existing current systems. • Used various Core Java concepts such as Multi-Threading, Exception Handling, Collection APIs to implement various features and enhancements. Environment:Websphere 7.5, Struts MVC 2.2.3, Hibernate 4, Spring 4.1.6, JSP 2.2.1, Servlets 3.0, JUnit, RAD 7.5, Log4j, Apache ANT, Clear case, Oracle 11g.
