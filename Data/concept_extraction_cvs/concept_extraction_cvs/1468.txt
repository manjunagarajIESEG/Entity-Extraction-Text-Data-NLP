Senior JAVA/J2EE Developer
Cerner Corporation - Kansas City, MO
Project: Healthcare Portal, Patient Plan of Care (PPOC). Description:Cerner Healthcare is one of the most diversified Health Caretechnology companies in the United States, and one of the leaders worldwide in helping people live better lives and serving to make the health system work healthier for everyone. This project involves the development of a Web based application for customers to access the application and achieve Entrepreneur Resource Planning Functionality.  Responsibilities: • Analysis, Design, Project Planning and effort estimate and Development of FTM application based on -"MVC" architecture and Front control design pattern using Spring MVCFramework and Angular JS for Presentation tier and server-side J2EE technologies. • Used Agile (SCRUM) methodologies for application development on servicing platform and maintained source control using SVN. • Worked on JavaScript for the Closing and Funding tasks UI's usingNode JS andAngular JS 2.0 Framework. • Used Spring MVC as RESTFUL service Provider instead of view resolvers. • Developed various RESTFUL services to publish costing-integration and master-item services using JAX-RS. • Used features of spring framework like IOC, Spring Batchand Spring Hibernate integration on the server side. • Used Maven for product lifecycle management. • Implemented GUI using HTML5, Jasmine, CSSand JAVAScript. • Deployed the application onAWS(amazon web services) for scalable solutions. • Involved in implementing the application rules with the help of Drools framework. • Implemented the DAO layer using spring with Hibernate. • Designed and developed DAO framework for Cassandra. • Created and maintained Data migration Server onWeb Sphere 6.0 to generate email for test purpose as well. • Improved quality with SOLR Searchcapabilities supported by Spring and Hibernate. • Junit tests were written to test each module in the application and Jenkins as a deployment tool. • Handled Java Multi-Threading part in back-end component, one thread will be running for each user, which serves that user. • Extensively used Java Multi-Threadingconcept for downloading files from a URL. • Written code in Java to callCOBOL programs as a part of the Build Delegate module. • Used Clover for TestingJunits coverage of methods written. • Used JUnit for testing and check API performance • Used SOAPWeb services for transmission of large blocks of XML data over HTTP. • Worked on theMule ESBbuild on top of the SOA to develop the integration plugin to exchange data across multiple platforms. Environment:Core Java J2EE, 1.8, Spring 3.5+, Hibernate, ATG, JSF, SOAP/RestFul services, Drools, Cassandra, PL/SQL, Scala, Multi-Threading, AWS, Spark, Angular JS, NodeJS, JAP, JAX-RS, SAML, XML, XSL, Junit, Jenkins, Mock objects, JBoss, Maven, Eclipse, EDI, Mockito, Web Sphere 6.0, SVN, Mongo DB, Web Sphere, Mule ESB, HTML5, CSS and JAVAScript.
