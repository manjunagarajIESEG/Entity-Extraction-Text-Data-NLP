Java Developer
Rushcard - Cincinnati, OH
Direct Deposit Rush Card offers customer's free phone calls to a customer service agent. Like other prepaid cards, the Rush Card is designed to be managed online. It's designed to provide instant access to a set of basic financial services for over 48 million Americans who could not previously establish traditional banking relationships. A pioneer and prepaid card industry leader, Rush is one of the longest standing consumer reload-able prepaid cards to offer a direct deposit loading option and the first to offer direct deposit to a Prepaid Visa card. The project included designing a GUI - dashboard to automate the process of aggregating all the risk numbers and summarizing them in the form of reports. It also included making enhancements to the web application which enables potential customers to perform daily transactions for paycheck, benefits payments, or tax refund electronically It provided a clear and complete picture of the client's asset allocation, current portfolio and full brokerage capabilities A Deposit ID number is a secure alternative number that user can use instead of your 16-digit RushCard number to set up Direct Deposit on the card. • Involved in all phases of software development life cycle, design, development and maintenance of the application. • Worked with service oriented architecture (SOA). • Involved in J2EE Design Patterns such as Data Transfer Object (DTO), DAO, Value Object and Template. • Extensively worked with core java like collections, String Builder and interfaces. • Developed a multi-user web application using Servlet API, JDBC, Spring and Hibernate framework to provide the needed functionality. • Developed Spring Beans and configured Spring using applicationContext.xml. • Primarily focused on the spring components such as Spring MVC, Dispatcher Servlets, Controllers, Model and View Objects, View Resolver. • Development of UI models using HTML, JSP, JavaScript, AJAX and CSS. • Consuming and exposing various Web services using JAX-RS and JSON to different system's for business services. • Developed complex Web Services and tailored JAX-RS API to suit the requirement. • Involved in creating Restful web services using JAX-RS and JERSEY tool. • Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST (Using Axis and Jersey frameworks). • Implemented Caching Strategies in Web Services Client Layer for reducing the number of executions in Controller. • Assisted Database Developers using PL/SQL for managing data associated with the tables. • Used JSP, JavaScript, JQuery, AJAX, CSS, and HTML as data and presentation. • Generated DAO's to map with database tables using Hibernate. • Uses Second Level Cache to enhance performance and Proper Memory Management. • Developed application using JMS for sending and receiving Point-to-Point JMS Queue messages. • Generated POJO classes with JPA Annotations using Reverse Engineering. • Used Apache CXF as the Web Services framework to implement the REST APIs involved. • Developed SQL Queries, functions and stored procedures for performing CRUD operations in Oracle DB for the application. • Created WAR/EAR files from Maven and deployed them on Tomcat. • Used log4j, sl4j, JUnit for debugging, testing and maintaining the system state. • Wrote JUNIT Test cases for Spring Controllers and Web Service Clients in Service Layer using Mockito. • Worked with AGILE-SCRUM methodology and quick to understand user stories. Conducted Scrum meetings limited to 15 day sprints. • Used GIT to maintain source and version management and used Intelli JIDE. Environment: Java/J2EE, Jdk, Spring, Hibernate, Web Services, JAXRS, Mockito, WADL, SOAPUI, JSP, JDBC, JQuery, AJAX, Html, CSS, Maven, log4j, sl4j Oracle, MySQL, PL/SQL, SQL Developer , JMS, APACHE AXIS, IntelliJ, GIT, UNIX, AGILE.
