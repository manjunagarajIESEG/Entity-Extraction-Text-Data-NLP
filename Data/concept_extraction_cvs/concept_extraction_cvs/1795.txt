Java Developer
Morgan Stanley - New York, NY
Project: Client Online It is a Client Facing application which mainly aims at managing the portfolio of private wealth management for a client plus GO GREEN process to deliver all reports electronically or physically. PWM Clients can get the full status of their wealth in Morgan Stanley, about profits, loss, etc. intraday, daily, weekly or any other time basis. The website also offers the Clients to view their transactions made on their accounts and thus analyze performance with pictographically created designs. Also they can view theirs reports in an e-copy rather than paper print-outs for all the accounts. The project is a J2EE based project using Sybase and Informix as its backend. However, it also includes other frameworks and languages like struts, ExtJS and shell scripting (UNIX/Perl) Responsibilities:  • Involvement in the Design, architecture and development of application from scratch. • Developed single-page applications using latest JavaScript frameworks (Angular JS and ExtJS) • Created self-contained, reusable, and testable UI modules and components. • Involved in development using Core Java, Multi-Threading, Spring 3.0, Jsp, Servlet, Oracle, J2ee, REST, SOAP, JAXB, ANT, IVY. • Created and Normalized Tables, Views and developed Procedures in Sybase database to be accessible by DAO layer access of the server side. • Used Java-J2EE patterns like MVC, Front Controller, Value Object, Data Access Objects, Command Pattern and Singleton patterns. • Managed code for different releases by branching and merging using Perforce. • Developed Data Access layer from scratch for mapping database scheme to object model. • Developed the application by extensive usage of Object Oriented Design pattern such as Factory, Decorator, Adapter, Command, Template to ensure code readability and maintainability. • Implemented java web service layer to get the signing rules from the isolation layer using bottom down approach using JAX-WS framework. • Designed and Developed batch processing using shell scripting and Autosys. • Implemented Database scripts to support integration testing. • Involved in development estimation and project release strategy. • Reviewed peer code using Crucible tool to comment and track review changes. • Used JIRA as a Change Request, defect tracking and project status tracking system in the project.  Environment: Core Java, J2EE, Multithreading, JSP, Servlets, Java Script, JDBC, XML, UML, JNDI, Web Services, SOAP, WSDL, JMS, Spring 3.0 (Core, Context), DAL, SLF4j, Oracle 10g, Perforce, Ant, Crucible with JIRA, JUnit, JMS, IBM WebSphere MQ series, Linux.
