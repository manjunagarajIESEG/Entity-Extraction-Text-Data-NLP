stock picker
ClojureScript and Google Closure
implemented in python and java, clojure) that programmatically forecasts the future of a using historical price and volume data. Sometimes because of non-statistical thinking forecasting can become flawed by even experts in their field. Implementation Online price and volume data is aggregated daily into a MYSQL database. A generic python machine learning code from scikitlearn was used to learn and predict some future price increase/decrease. Interpretation Small java programs were used to interpret and filter output files based on cross-validation accuracy measures. Recursive Neural Net April 2015 to Present Motivation: The S&P500 is a bell weather for the stock market at large. When the S&P 500 is trending it is better to invest in its direction than against it even for US stocks that are not in the index. While the program written is used here for the S&P500 it could just as easily be used for any other dataset. The recursive neural net I have developed has performed well on the SPY (the sp500). It is producing valid probability distributions (the sum of all possible movement probabilities add to 1) of the sp500. The distributions are normal to log normal. The particular algorithm used was the Graves LSTM of the Deeplearning4j library.  Languages Java        (Full professional proficiency) JavaScript                                               (Professional working proficiency) Clojure        (Full professional proficiency) C++        (Professional working proficiency)  Courses Bachelor of Science (BAS), Computer Science The University of Texas at San Antonio Parallel Programming                                     4823 Computer Architecture                                    3853 Computer Organization                                    3843
