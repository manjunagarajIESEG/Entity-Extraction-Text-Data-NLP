Java Developer
HarperCollins Publishers LLC - Moosic, PA
Responsibilities: ● Interacted with business analysts to study the requirements and design interfaces for the various use cases. ● Responsible for developing and modifying the existing service layer based on the business requirements. ● Implemented the view layer using JSP, Business layer using Spring 3.0, and persistent layer using DAO and Hibernate 3.2. ● Developed the necessary front end user interfaces in JSPs, HTML, Java Script, CSS that will be integrated using Spring MVC Framework. ● Worked on Spring Rest web service implementation. ● Developed Form Beans/ JavaBeans, Spring Controller Classes and configured with the corresponding JSP pages in spring-config.xml file. ● Developed HTML and JSP pages for user interaction and data presentation. ● Used Spring Framework for Dependency injection and integrated with Hibernate Framework. ● Participated in coding Spring AOP components for the Transactional Model to handle many requests. Involved in writing JSP and Servlet components. Used Spring's Bean Factory for initializing services. ● Implementation of Thread pool and locks for concurrency management. ● Used Spring Core Annotations for Dependency Injection. ● Created the Hibernate mapping and properties files using spring modules like MVC, Web and ORM. Used Hibernate template to integrate Spring DAO business objects with respective tables from the database. ● Involved in configuring hibernate to access database and retrieve data from the database. ● Wrote HBM Files for mapping Java objects to tables in relational database and updated it as required. ● Created tables, stored procedures in SQL for data manipulation and retrieval, Database Modification using SQL, PL/SQL, Stored procedures, triggers, Views in Oracle 9i. ● Created XML schema documents based on the requirements and used JAXB for marshalling and unmarshalling of the XML documents. ● Implemented various standard J2EE design patterns (Singleton, Factory, Data Access Object, MVC, Front Controller) ● Used Weblogic Server 8.2 for deploying the application. ● Used MAVEN for project management and build automation. ● Used  Message Driven Beans (MDB) to read the messages from JMS queues for asynchronous communication. ● Used HP Quality center for defect tracking. ● Used Subversion as a version control for implementing the application. ● Controlled the log information by using framework Log4j. ● Performed Unit Testing Using JUnit.  Environment: Core Java, J2EE, Weblogic 8.2, Eclipse, Spring 3.0, Hibernate 3.2, Spring Core, Spring Rest, Spring AOP, Spring DAO, JSP, JAXB, HTML, CSS, Java Script, SQL, PL/SQL, Oracle 9i, Maven, SVN, Junit, Log4j.
