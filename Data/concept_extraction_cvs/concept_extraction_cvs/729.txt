Sr. Java Developer
Verizon - San Diego, CA
Toll-Free Data Service (TFDS) lets companies sponsor mobile data usage for their content and services. This increases content consumption, driving engagement and conversion. The main Objective is to provide the consumers (Verizon subscribers) to access content without worrying about data charges, to increase their revenue by driving up acquisitions, engagement and conversions and efficiently use and monetize its data assets for verizon. Responsibilities:  • Developed the application management module according to the requirements and design specifications, Integrate Spring application into a JMX infrastructure. • Involved in analysis, design and development and testing phases of the application development using Scrum Agile methodology. • Developed JSP and Servlets to dynamically generate HTML and display the data to the client side. • Worked on Spring OAuth2 framework for implementing Authorization server. Server generates the client credentials. • Improved the Data Visualization in the operation of the System by the integration of the existing SCADAs using OPC and Modbus communication. • Developed and implemented the In memory Queue logic for different modules of the project where the logic deals with calculating the minimum, maximum and average time taken for the active users at a given period of time. • Developed facilities for stripping long error messages from minified JavaScript code for Angular JS. • Developed the online accessibility functionality of statistics and kpi guide from Performance Manager in Netcool NMS using Java, J2EE, JSP. • Developing an Administration Portal using HTML5, node JS, jQuery, Java Script Frameworks like BackBone JS and requires. • Developed Observer System to give alerts and notifications in pre-defined active applications. • This is generic implementation where it can be imported in different application as a Jar file which is to be observed. These alerts are send to eternal applications to monitor. • Developed Restful web services to interact with application portal for other systems. • The Authentication Server returns an access token based on the posted user credential. • Developed the application using Eclipse IDE. • Enhancement and modification of the existing Customer Integrated Position (CIP) application. Consuming webservices to populate data on CIP interface. • Worked on Spring JMX the centralized management of managed objects (called Mbeans) • Used Spring JMX annotations to expose the spring bean as MBean and to use annotation for attributes, operations and for the notification. • The declarative exposure of MBeans over remote, JSR-160 connectors. • Used Jconsole to view the exposed mbeans in JVM. • Developed Components and Interfaces using Spring MVC, Spring JPA. • Used Spring JPA, Spring DATA for data access and mapping. • Developed complex database queries and involved in performance tuning of queries. • Involved in writing service class objects that depend on the data access objects.  Environment: Core Java, J2EE, python, BackBone.js, Angular JS, Node JS, Eclipse IDE, Ajax, Json, Xml, Jquery, JUnit 4, Cygwin, GIT, Spring Oauth2, Spring JMX, Spring Oauth2, Spring JPA, API, SOA, Soap, SoapUI, Restful Web Services, Jconsole, Visual VM, Tomcat 7.0, MySql, Log4j, JSP.
