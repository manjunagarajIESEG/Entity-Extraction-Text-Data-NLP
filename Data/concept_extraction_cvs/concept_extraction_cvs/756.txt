Principal Software Engineer
Storiant - Boston, MA
• Part of small team tasked with building a petabyte scale storage solution utilizing ZFS, Python, C/C++, Cassandra and Zookeeper at costs up to 90% less than traditional solutions. • Team lead for the C/C++ zfs-manager component, responsible for interacting with ZFS, Linux, enclosures and hard-drives. • Responsible for all aspects of zfs-manager and ZFS, including but not limited to design, implementation, bug fixes and communication with the OpenZFS community. • Worked closely with enclosure vendors to implement the various algorithms necessary to assemble LSI and PMC SAS expanders into workable software components. • Implemented several mechanisms (REST, Zookeeper, shared memory queues) to allow Python components to interact with zfs-manager. • Worked with OpenZFS developers, both remotely and in-person, and fixed several bugs. • Implemented a mechanism to allow spinning up/down disks that are part of a ZFS pool. • Created a C and C++ API to ZFS that allows performing most ZFS tasks from C/C++ code. • Designed and implemented a fake enclosure mechanism which allows running zfs-manager in absence of real enclosures or even real disks. • Implemented the power-manager component, which is written in Python and responsible for issuing commands to zfs-manager for controlling system power. • Discovered a read throughput defect in Western Digital WD40EURX drives when disks were used in SAS Expanders.  The defect was verified and subsequently fixed by Western Digital.
